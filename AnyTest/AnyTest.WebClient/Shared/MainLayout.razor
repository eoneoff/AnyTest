@inherits LayoutComponentBase
@inject IAuthService AuthService
@inject HttpClient _httpClient 
    
<div>
    <div class="content-wrapper">
        <div class="container-fluid">
            <div class="d-flex flex-column align-items-stretch">
                <nav class="navbar navbar-expand-lg navbar-dark bg-secondary w-100 mt-4 mb-2">
                    <a class="navbar-brand" href="">AnyTest</a>
                    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarContent">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarContent">
                        <ul class="navbar-nav mr-auto w-100">
                            <AuthorizeView Roles="Administrator">
                                <Authorized>
                                    <li class="nav-item">
                                        <NavLink class="nav-link" href="users">@Localizer[nameof(Resources.Users)]</NavLink>
                                    </li>
                                </Authorized>
                            </AuthorizeView>
                            <AuthorizeView Roles="Tutor">
                                <Authorized>
                                    <li class="nav-item">
                                        <NavLink class="nav-link" href="tutor/tests" Match="NavLinkMatch.Prefix">@Localizer[nameof(Resources.Courses)]</NavLink>
                                    </li>
                                    <li class="nav-item">
                                        <NavLink class="nav-link" href="tutor/students" Match="NavLinkMatch.Prefix">@Localizer[nameof(Resources.Students)]</NavLink>
                                    </li>
                                </Authorized>
                            </AuthorizeView>
                            <AuthorizeView Roles="Student">
                                <li class="nav-item">
                                    <NavLink class="nav-link" Match="NavLinkMatch.Prefix" href="student">
                                        @Localizer[nameof(Resources.Courses)]
                                    </NavLink>
                                </li>
                            </AuthorizeView>
                        </ul>
                        <AuthorizeView>
                            <Authorized>
                                <div class="d-flex flex-column flex-lg-row">
                                    <a href="" class="text-white mr-lg-4 align-self-lg-center mb-2 mb-lg-0">@context.User.Identity.Name</a>
                                    <button class="btn btn-light" @onclick="Logout">
                                        @Localizer[nameof(Resources.Logout)]
                                    </button>
                                </div>
                            </Authorized>
                        </AuthorizeView>
                    </div>
                </nav>
                <main class="flex-grow-1 d-flex flex-row justify-content-center">
                    <AuthorizeView>
                        <Authorized>
                            <CascadingValue Value="@context.User.Identity.Name" Name="UserName">
                                <div class="main-panel">
                                    @Body
                                </div>
                            </CascadingValue>
                        </Authorized>
                        <NotAuthorized>
                            <div class="d-flex flex-column">
                                <Login />
                                <div class="mb-auto mt-3 d-flex flex-column flex-lg-row">
                                    @if (changeIp)
                                    {
                                        <input type="text" class="form-control mr-lg-1 mb-1 mb-lg-0" @bind-value="Ip"@bind-value:event="oninput"/>
                                        <button type="button" class="btn btn-success" @onclick="ChangeIP"><i class="fa fa-plus"></i></button>
                                    }
                                    else
                                    {
                                        <button type="button" class="btn btn-outline-light ml-lg-auto" @onclick="()=>changeIp = true">@Localizer[nameof(Resources.ServerIP)]</button>
                                    }
                                </div>
                            </div>
                        </NotAuthorized>
                    </AuthorizeView>
                </main>
            </div>
        </div>
    </div>
</div>

@code
{
    private bool changeIp = false;
    private string Ip;

    private void Logout()
    {
        State.ResetPerson();
        AuthService.Logout();
    }

    private void ChangeIP()
    {
        if(!string.IsNullOrWhiteSpace(Ip))
        {
            string addressUnit = @"(25[0-5]|(2[0-4]\d)|[01]?\d{1,2})";
            System.Text.RegularExpressions.Regex regex = new System.Text.RegularExpressions.Regex(string.Format("^(localhost|{0}.{0}.{0}.{0}}$", addressUnit));
            if(regex.Match(Ip).Success)
            {
                _httpClient.BaseAddress = new Uri($"https://{Ip}:44358/api");
                changeIp = false;
            }
        }
    }
}
