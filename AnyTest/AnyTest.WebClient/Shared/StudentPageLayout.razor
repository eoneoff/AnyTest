@using AnyTest.Model.ApiModels
@inherits LayoutComponentBase
@layout MainLayout
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Student")]

<TogglableSidebarPanel ToggleButtonClass="btn btn-outline-success" Class="bg-white">
    <SidebarContent>
        <div class="mx-1 d-flex flex-column justify-content-start">
            <TestsTree Tree="@(new TestsTreeModel
                               {
                                   Name=Localizer[nameof(Resources.Subjects)],
                                   Url="subjects",
                                   Children = State.TestsTreeList.ContainsKey("subjects") ? State.TestsTreeList["subjects"] : null
                               })" UrlRoot="student" />
            <TestsTree Tree="@(new TestsTreeModel
                               {
                                   Name=Localizer[nameof(Resources.Courses)],
                                   Url = "courses",
                                   Children = State.TestsTreeList.ContainsKey("courses") ? State.TestsTreeList["courses"] : null
                               })" UrlRoot="student" />
            <TestsTree Tree="@(new TestsTreeModel
                               {
                                   Name = Localizer[nameof(Resources.Tests)],
                                   Url = "tests",
                                   Children = State.TestsTreeList.ContainsKey("tests") ? State.TestsTreeList["tests"] : null
                               })" UrlRoot="student" />
        </div>
    </SidebarContent>
    <MainContent>
        @Body
    </MainContent>
</TogglableSidebarPanel>

@code
{ protected override async Task OnInitializedAsync()
    {
        if (State.TestsTreeList.Count() == 0) await State.GetTestsList();
        State.TestsUpdated += (object sender, EventArgs e) => StateHasChanged();
        if (State?.Person?.Student == null) await State.GetStudent();
    }
}

