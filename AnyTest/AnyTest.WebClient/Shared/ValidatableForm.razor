@typeparam TItem

<EditForm @ref="editForm" Model="Model" OnValidSubmit="OnSubmit">
    <DataAnnotationsValidator />
    @ChildContent(Model)
    @if (!HideButtons)
    {
        <div class="d-flex flex-row justify-content-between mt-3">
            <button type="submit" class="btn btn-success" disabled="@Unchanged">@(string.IsNullOrEmpty(OkButtonText) ? Localizer[nameof(Resources.Save)] : OkButtonText)</button>
            <button type="button" class="btn btn-danger" @onclick="OnCancel">@(string.IsNullOrEmpty(CancelButtonText) ? Localizer[nameof(Resources.Cancel)] : CancelButtonText)</button>
        </div>
    }
</EditForm>


@code
{
    private EditContext editContext;
    private EditForm editForm;

    [Parameter]
    public TItem Model { get; set; }

    [Parameter]
    public RenderFragment<TItem> ChildContent { get; set; }

    [Parameter]
    public bool HideButtons { get; set; } = false;

    [Parameter]
    public EventCallback OnSubmit { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    [Parameter]
    public bool Disabled { get; set; } = false;

    [Parameter]
    public bool Unchanged { get; set; } = true;

    [Parameter]
    public string OkButtonText { get; set; }

    [Parameter]
    public string CancelButtonText { get; set; }

    public bool Validate() => editForm.EditContext.Validate();
}
