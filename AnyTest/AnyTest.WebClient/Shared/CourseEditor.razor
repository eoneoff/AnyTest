@inherits ValidatableFormViewModel<Course>

<ValidatableForm @ref="form" Model="Course" OnSubmit="()=>saveConfirmationDialog.Show()" OnCancel="OnCancel" Unchanged="@unchanged" Disabled="@Disabled" HideButtons="@HideButtons">
    <div class="container-fluid px-0">
        <ValidatableFormField Wide="@Wide" Label="@Localizer[nameof(Resources.Name)]" Id="coursename">
            <ValidationMessage For="@(()=>Course.Name)" />
            <InputText Id="coursename" Class="form-control" @bind-Value="Course.Name" @oninput="@(()=>unchanged = false)" disabled="@Disabled" />
        </ValidatableFormField>
        <ValidatableFormField Wide="@Wide" Label="@Localizer[nameof(Resources.Subject)]" Id="coursesubject">
            <select @bind="Course.SubjectId" class="custom-select">
                <option value="" id="coursesubject"></option>
                @foreach (var subj in State.Subjects)
                {
                    <option value="@subj.Id">@subj.Name</option>
                }
            </select>
        </ValidatableFormField>
    </div>
</ValidatableForm>

<ModalDialog @ref="saveConfirmationDialog" OnConfirm="OnSubmit">
    <Header>@Localizer[nameof(Resources.SaveCourse)]</Header>
    <Content>
        <table class="table table-sm table-borderless">
            <tr><th class="text-right">@Localizer[nameof(Resources.Name)]:</th><td>@Course.Name</td></tr>
            <tr>
                <th class="text-right">@Localizer[nameof(Resources.Subject)]:</th>
                <td>@(new List<Subject>() != null ? new List<Subject>().FirstOrDefault(s => s.Id == Course.SubjectId)?.Name ?? "" : "")</td>
            </tr>
        </table>
    </Content>
</ModalDialog>

@code
{
    private ModalDialog saveConfirmationDialog;

    [Parameter]
    public Course Course { get; set; } = new Course();
}
