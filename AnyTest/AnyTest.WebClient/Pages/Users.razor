@page "/users"

<div class="m-5">
    <div class="d-flex flex-row mb-2">
        <button type="button" class="btn btn-success" @onclick="@(()=>editor.Show())">@Localizer[nameof(Resources.AddUser)]</button>
    </div>
    <PageView Items="State.Users" PageSize="12" ContainerClass="table-bordered table-sm table-hover">
        <Header>
            <tr>
                <th>@Localizer[nameof(Resources.Login)]</th>
                <th>e-mail</th>
                <th>@Localizer[nameof(Resources.UserName)]</th>
                <th>@Localizer[nameof(Resources.Roles)]</th>
            </tr>
        </Header>
        <ItemTemplate Context="user">
            <tr @onclick="()=>selectedUser = user" class="@(user.User == selectedUser?.User ? "selected-table-row" : "")">
                <td>@user.User</td>
                <td>@user.Email</td>
                <td>@user.Name</td>
                <td>
                    <ul>
                        @foreach(var role in user.Roles)
                        {
                            <li>@Localizer[role]</li>
                        }
                    </ul>
                </td>
            </tr>
        </ItemTemplate>
    </PageView>
</div>

<ModalDialog @ref="editor" Style="width:80vw;" OkButtonText="@Localizer[nameof(Resources.Save)]" OnConfirm="SaveUser" CloseOnOk="false">
    <Header></Header>
    <Content>
        <div class="row mx-0">
            <div class="col-lg-6">
                <UserEditor @ref="userEditor" HideButtons="true"></UserEditor>
            </div>
            <div class="col-lg-6">
                <div>
                    <PersonEditor HideButtons="true" Disabled="@(!enableEditPerson)"></PersonEditor>
                </div>
                <div class="mt-2 custom-control custom-switch">
                    <input type="checkbox" class="custom-control-input" id="personEditSwitch" @bind-value="@enableEditPerson"/>
                    <label class="custom-control-label" for="personEditSwitch">@Localizer[nameof(Resources.EditPerson)]</label>
                </div>
            </div>
        </div>
    </Content>
</ModalDialog>

@code
{  
    private UserInfo selectedUser;
    private UserInfo editUser= new UserInfo();
    private ModalDialog editor;
    private bool enableEditPerson = false;
    private UserEditor userEditor;

    private UserInfo EditUser
    {
        get => editUser;
        set
        {
            editUser.User = value.User;
            editUser.Email = value.Email;
            editUser.Name = value.Name;
            editUser.UserPersonId = value.UserPersonId;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        if (State.Users.Count() == 0)
        {
            await State.GetUsers();
        }
    }

    private async Task SaveUser()
    {
        if(userEditor.Validate())
        {
            
        }
    }
}