@page "/login"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h1>@Localizer[nameof(Resources.LoginAction)]</h1>

@if(ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        @Error
    </div>
}

<div class="card">
    <div class="card-body">
        <h5 class="card-title">@Localizer[Resources.EnterCredentials]</h5>
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="password">e-mail</label>
                <InputText Id="email" Class="form-control" @bind-Value="loginModel.Email" />
                <ValidationMessage For="@(() => loginModel.Email)" />
            </div>
            <div class="form-group">
                <label for="password">@Localizer[nameof(Resources.Password)]</label>
                <InputText Id="password" type="password" Class="form-control" @bind-Value="loginModel.Password" />
                <ValidationMessage For="@(()=>loginModel.Password)" />
            </div>
            <button type="submit" class="btn btn-primary">@Localizer[nameof(Resources.DoLogin)]</button>
        </EditForm>
    </div>
</div>

@code
{
    private LoginModel loginModel = new LoginModel();
    private bool ShowErrors;
    private string Error;

    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if(result.Sussessfull)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Error;
            ShowErrors = true;
        }
    }
}