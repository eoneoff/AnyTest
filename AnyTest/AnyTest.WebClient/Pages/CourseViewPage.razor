@page "/student/courses/{Id:long}"
@inject HttpClient _httpClient
@layout StudentPageLayout

<div class="p-5">
    <table class="table table-hover">
        <tr>
            <th class="text-right">@Localizer[nameof(Resources.Name)]:</th>
            <td>@course.Name</td>
        </tr>
        <tr>
            <th class="text-right">@Localizer[nameof(Resources.Subject)]</th>
            <td>@State.Subjects.FirstOrDefault(s => s.Id == course.SubjectId)?.Name</td>
        </tr>
    </table>
</div>

@if (loading)
{
    <div class="modal-backdrop">
        <div class="d-flex justify-content-center flex-column align-items-center h-100">
            <div class="spinner-border text-white" style="width:20vh; height:20vh;border-width:30px;"></div>
            <h3 class="text-white font-weight-bold">@(Localizer[nameof(Resources.PleaseWait)])...</h3>
        </div>
    </div>
}

@code
{
    private bool loading;
    private Course course = new Course();

    [Parameter]
    public long Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (Id != 0)
        {
            loading = true;
            course = await _httpClient.GetJsonAsync<Course>($"courses/{Id}");
            loading = false;
        }
    }
}