@page "/"
@using System.Net
@inject IAuthService AuthService

<div>
    <div class="card m-5 flex-grow-1">
        <h3 class="card-header">
            @Localizer[nameof(Resources.UserInfo)]
        </h3>
        <div class="card-body">
            <div class="card-title">
                @Localizer[nameof(Resources.LookOrChangePersonalInfo)]
            </div>
            <div class="container mx-0">
                @if (editing)
                {
                    <PersonEditor Person="EditPerson" OnSubmit="ConfirmSave.Show" OnCancel="CancelEdit" Wide="true"></PersonEditor>
                }
                else
                {
                    <PersonViewer Person="State.Person" EnableEditToggle="true" OnEditToggle="EditModeOn"></PersonViewer>
                }
            </div>
        </div>
    </div>
</div>

<ModalDialog @ref="ConfirmSave" OnConfirm="SavePerson">
    <Header>
        @Localizer[nameof(Resources.SavePerson)]?
    </Header>
    <Content>
        <table class="table table-sm table-borderless">
            <tr><th class="text-right">@Localizer[nameof(Resources.FirstName)]:</th><td class="@(State.Person.FirstName!=EditPerson.FirstName ? "text-danger" : "")">@EditPerson.FirstName</td></tr>
            <tr><th class="text-right">@Localizer[nameof(Resources.FamilyName)]:</th><td class="@(State.Person.FamilyName!=EditPerson.FamilyName ? "text-danger" : "")">@EditPerson.FamilyName</td></tr>
            <tr><th class="text-right">@Localizer[nameof(Resources.Patronimic)]:</th><td class="@(State.Person.Patronimic!=EditPerson.Patronimic ? "text-danger" : "")">@EditPerson.Patronimic</td></tr>
            <tr><th class="text-right">@Localizer[nameof(Resources.Phone)]:</th><td class="@(State.Person.Phone!=EditPerson.Phone ? "text-danger" : "")">@EditPerson.Phone</td></tr>
            <tr><th class="text-right">e-mail:</th><td class="@(State.Person.Email!=EditPerson.Email ? "text-danger" : "")">@EditPerson.Email</td></tr>
        </table>
    </Content>
</ModalDialog>

@if(saving)
{
    <div class="modal-backdrop">
        <div class="d-flex justify-content-center flex-column align-items-center h-100">
            <div class="spinner-border text-white" style="width:20vh; height:20vh;border-width:30px;"></div>
        </div>
    </div>
}

@code
{
    private Model.Person EditPerson { get; set; } = new Model.Person();
    private bool editing = false;
    private bool saving = false;
    private ModalDialog ConfirmSave;

    [CascadingParameter]
    private Task<AuthenticationState> authStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if((State?.Person?.Id ?? 0) == 0) await State.GetPersonByAuthorizedUser();
    }

    private void EditModeOn()
    {
        editing = true;
        EditPerson = State.GetCopyOfPerson();
    }

    private async Task SavePerson()
    {
        saving = true;
        try
        {
            var roles = new List<string>();
            var user = (await authStateTask).User;
            if(user.IsInRole("Tutor")) roles.Add("Tutor");
            if(user.IsInRole("Student")) roles.Add("Student");
            await State.SavePerson(EditPerson, roles);
        }
        finally
        {
            saving = false;
            editing = false;
        }
    }

    private void CancelEdit()
    {
        editing = false;
    }
}